[tool.poetry]
name = "brimopt"
version = "0.0.1"
description = "Bicycle rider models optimize tool"
authors = ["TJStienstra <T.J.Stienstra@student.tudelft.nl>"]
license = "CC0-1.0"
readme = "README.md"
repository = "https://github.com/TJStienstra/brimopt"

[tool.poetry.dependencies]
python = "^3.8"
brim = {git = "https://github.com/TJStienstra/brim.git", branch = "main", extras=["plotting", "parametrize"]}
pycollo = {git = "https://github.com/brocksam/pycollo.git"}
cloudpickle = "^2.2.1"


[tool.poetry.group.lint.dependencies]
ruff = "^0.0.262"


[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.0.0"


[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
furo = "^2023.3.27"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"
line-length = 88
select = ["A", "B", "C", "D", "E", "F", "I", "N", "Q", "W", "NPY", "RUF", "SIM", "TID",
          "T20", "UP"]
ignore = ["A003", "D105", "D203", "D213"]
show-source = true

[tool.ruff.per-file-ignores]
"tests/*" = ["D", "S101"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["brimopt"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
